# Generated by Django 5.2.4 on 2025-09-17 09:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(choices=[('t-shirts', 'T-Shirts'), ('polos', 'Polos'), ('hoodies', 'Hoodies / Crewnecks'), ('sweatshirts', 'Sweatshirts'), ('tracksuits', 'Tracksuits'), ('jackets', 'Jackets'), ('shorts', 'Shorts'), ('headwear', 'Headwear'), ('accessories', 'Accessories')], help_text='Unique identifier for the category', max_length=50, unique=True)),
                ('label', models.CharField(help_text='Display name for the category', max_length=100)),
                ('description', models.TextField(help_text='Description of the category')),
                ('image', models.URLField(help_text='Category image URL')),
                ('featured', models.BooleanField(default=False, help_text='Whether this category is featured on the homepage')),
                ('product_count', models.PositiveIntegerField(default=0, help_text='Number of products in this category (auto-calculated)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.CharField(help_text="Order ID (e.g., 'ORD123456')", max_length=20, primary_key=True, serialize=False)),
                ('customer_email', models.EmailField(help_text='Customer email address', max_length=254)),
                ('customer_name', models.CharField(help_text='Customer full name', max_length=200)),
                ('shipping_address', models.TextField(help_text='Full shipping address')),
                ('shipping_city', models.CharField(max_length=100)),
                ('shipping_country', models.CharField(max_length=100)),
                ('shipping_postal_code', models.CharField(blank=True, max_length=20)),
                ('subtotal', models.PositiveIntegerField(help_text='Subtotal in cents')),
                ('shipping_cost', models.PositiveIntegerField(default=0, help_text='Shipping cost in cents')),
                ('tax_amount', models.PositiveIntegerField(default=0, help_text='Tax amount in cents')),
                ('total', models.PositiveIntegerField(help_text='Total amount in cents')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('payment_method', models.CharField(help_text='Payment method used (stripe, momo, etc.)', max_length=50)),
                ('payment_reference', models.CharField(blank=True, help_text='Payment gateway reference', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Tag name (e.g., 'featured', 'new', 'bestseller')", max_length=50, unique=True)),
                ('display_name', models.CharField(help_text='Display name for the tag', max_length=100)),
                ('color', models.CharField(default='#3B82F6', help_text='Hex color code for the tag', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(help_text='Unique product identifier', max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Product title', max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly version of the title', max_length=200, unique=True)),
                ('price', models.PositiveIntegerField(help_text='Price in cents (e.g., 2500 = $25.00)', validators=[django.core.validators.MinValueValidator(1)])),
                ('description', models.TextField(help_text='Product description')),
                ('image', models.URLField(help_text='Product image URL')),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='Available stock quantity')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the product is active and available for purchase')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(help_text='Product category', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.category', to_field='key')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.PositiveIntegerField(help_text='Price per unit in cents at time of purchase')),
                ('total_price', models.PositiveIntegerField(help_text='Total price for this line item in cents')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shop.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductTagAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_assignments', to='shop.product')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_assignments', to='shop.producttag')),
            ],
            options={
                'ordering': ['tag__name'],
                'unique_together': {('product', 'tag')},
            },
        ),
    ]
