# Generated by Django 5.2.4 on 2025-09-25 22:39

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0011_add_promo_code_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(help_text='Name of the reviewer', max_length=100)),
                ('user_email', models.EmailField(blank=True, help_text='Email of the reviewer (optional)', max_length=254)),
                ('rating', models.PositiveIntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(help_text='Review title', max_length=200)),
                ('comment', models.TextField(help_text='Review comment')),
                ('verified_purchase', models.BooleanField(default=False, help_text='Whether this review is from a verified purchase')),
                ('size_purchased', models.CharField(blank=True, help_text='Size purchased by the reviewer', max_length=50)),
                ('color_purchased', models.CharField(blank=True, help_text='Color purchased by the reviewer', max_length=50)),
                ('is_approved', models.BooleanField(default=True, help_text='Whether this review is approved for display')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this review is featured')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('helpful_count', models.PositiveIntegerField(default=0, help_text='Number of helpful votes')),
                ('not_helpful_count', models.PositiveIntegerField(default=0, help_text='Number of not helpful votes')),
                ('order', models.ForeignKey(blank=True, help_text='Order associated with this review (if verified)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.order')),
                ('product', models.ForeignKey(help_text='Product being reviewed', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='shop.product')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('product', 'user_email', 'user_name')},
            },
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Review image file', upload_to='review_images/')),
                ('alt_text', models.CharField(blank=True, help_text='Alternative text for the image', max_length=200)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order of the image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(help_text='Review this image belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.productreview')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewHelpfulVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_ip', models.GenericIPAddressField(help_text='IP address of the voter (to prevent spam)')),
                ('user_session', models.CharField(blank=True, help_text='Session ID of the voter', max_length=100)),
                ('helpful', models.BooleanField(help_text='True for helpful, False for not helpful')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(help_text='Review being voted on', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='shop.productreview')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('review', 'user_ip')},
            },
        ),
    ]
