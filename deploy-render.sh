#!/bin/bash

echo "ðŸš€ ENTstore Render Deployment Guide"
echo "=================================="
echo ""

echo "1. First, make sure you have committed all changes:"
echo "   git add ."
echo "   git commit -m 'Fix Render deployment configuration'"
echo "   git push origin main"
echo ""

echo "2. In your Render dashboard:"
echo "   - Go to https://dashboard.render.com/"
echo "   - Create a new Web Service"
echo "   - Connect your GitHub repository"
echo "   - Use these settings:"
echo ""

echo "   Build Command: ./build.sh"
echo "   Start Command: cd backend && gunicorn myproject.wsgi:application --host 0.0.0.0 --port \$PORT --workers 4 --timeout 120"
echo ""

echo "3. Environment Variables to set in Render:"
echo "   DEBUG=false"
echo "   RENDER=true"
echo "   USE_SQLITE=false"
echo "   DJANGO_SECRET_KEY=(auto-generated by Render)"
echo "   DATABASE_URL=(from your PostgreSQL database)"
echo "   FRONTEND_URL=https://enintino.vercel.app"
echo "   STRIPE_PUBLISHABLE_KEY=your_stripe_publishable_key_here"
echo "   STRIPE_SECRET_KEY=your_stripe_secret_key_here"
echo "   EMAIL_HOST_USER=your_brevo_smtp_user_here"
echo "   EMAIL_HOST_PASSWORD=your_brevo_smtp_password_here"
echo "   ADMIN_EMAIL=Enontinoclothing@gmail.com"
echo ""

echo "4. Create a PostgreSQL database:"
echo "   - In Render dashboard, create a new PostgreSQL database"
echo "   - Name it 'entstore-db'"
echo "   - Copy the DATABASE_URL and add it to your web service environment variables"
echo ""

echo "5. Add a persistent disk:"
echo "   - In your web service settings, add a disk"
echo "   - Name: media-storage"
echo "   - Mount Path: /opt/render/project/data"
echo "   - Size: 1GB"
echo ""

echo "6. After deployment, test these endpoints:"
echo "   https://your-app.onrender.com/api/health/"
echo "   https://your-app.onrender.com/api/debug-env/"
echo "   https://your-app.onrender.com/api/shop/products/"
echo ""

echo "7. If you get 502 errors, check the logs in Render dashboard"
echo "   Common issues:"
echo "   - Missing environment variables"
echo "   - Database connection problems"
echo "   - Build failures"
echo ""

echo "âœ… Your configuration files have been updated!"
echo "   - render.yaml: Updated with proper environment variables"
echo "   - build.sh: Enhanced with better error handling"
echo "   - settings.py: Fixed media paths and database configuration"
echo ""

echo "ðŸ”§ Troubleshooting:"
echo "   If deployment fails, check:"
echo "   1. All environment variables are set correctly"
echo "   2. Database is created and accessible"
echo "   3. Build logs for any errors"
echo "   4. Health check endpoint responds"
echo ""